<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ace.erp.persistence.sys.RoleMapper">

    <resultMap id="roleResult" type="com.ace.erp.entity.sys.Role">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="role" column="role"/>
        <result property="description" column="description"/>
        <result property="show" column="is_show"/>
        <result property="createTime" column="create_time" javaType="java.lang.String"
                typeHandler="com.ace.erp.handler.mybatis.StringISODateTimeTypeHandler"/>
        <result property="modifyTime" column="modify_time" javaType="java.lang.String"
                typeHandler="com.ace.erp.handler.mybatis.StringISODateTimeTypeHandler"/>
        <collection column="role_id" property="resourcePermissions" ofType="RoleResourcePermission"
                resultMap="com.ace.erp.persistence.sys.RoleResourcePermissionMapper.roleResourcePermissionMap" />
    </resultMap>


    <select id="getRoleResourcePermissions" parameterType="java.lang.Integer" resultMap="roleResult">
        select
            role.id,
            role.name,
            role.role,
            role.description,
            rrp.id as rrp_id,
            rrp.role_id,
            rrp.resource_id,
            rrp.permission_ids
        from
            sys_role as role
        left join
            sys_role_resource_permission as rrp on role.id = rrp.role_id
        where
            role.id = #{roleId};
  </select>

    <select id="getListRolesByRoleIds" parameterType="Map" resultMap="roleResult">
        SELECT
        r.id,r.name,r.role,r.description,r.is_show,r.create_time,r.modify_time,rrp.id as
        rrp_id,rrp.role_id,rrp.resource_id,rrp.permission_ids
        FROM sys_role as r
        LEFT JOIN sys_role_resource_permission as rrp on r.id = rrp.role_id
        WHERE r.id in
        <foreach item="item" index="index" collection="roleIds"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getOne" resultMap="roleResult">
        SELECT
        r.id,r.name,r.role,r.description,r.is_show,r.create_time,r.modify_time,
        rrp.id as rrp_id,
        rrp.role_id,
        rrp.resource_id,
        rrp.permission_ids
        FROM sys_role as r
        LEFT JOIN sys_role_resource_permission as rrp on r.id = rrp.role_id where r.id = #{id};
    </select>

    <select id="getCount" resultType="int">
        select count(*) from sys_role;
    </select>

    <select id="getPageList" resultMap="roleResult" parameterType="java.util.Map">
        SELECT
        r.id,r.name,r.role,r.description,r.is_show,r.create_time,r.modify_time,
        rrp.id as rrp_id,
        rrp.role_id,
        rrp.resource_id,
        rrp.permission_ids
        FROM
          sys_role as r
        LEFT JOIN
          sys_role_resource_permission as rrp on r.id = rrp.role_id
        group by r.id
        limit #{offset},#{limit};
    </select>

    <select id="getAllRoles" resultMap="roleResult">
        SELECT
        r.id,r.name,r.role,r.description,r.is_show,r.create_time,r.modify_time,
        rrp.id as rrp_id,
        rrp.role_id,
        rrp.resource_id,
        rrp.permission_ids
        FROM sys_role as r
        LEFT JOIN sys_role_resource_permission as rrp on r.id = rrp.role_id limit 100;
    </select>

    <insert id="save" parameterType="Role" useGeneratedKeys="true" keyProperty="id">
      INSERT INTO
        sys_role (name,role,description,is_show,create_time,modify_time)
      VALUES
        (#{name},#{role},#{description},#{show},
        <if test="createTime == null">
            now(),
        </if>
        <if test="createTime != null">
            #{createTime},
        </if>
        <if test="modifyTime == null">
            now()
        </if>
        <if test="modifyTime != null">
            #{modifyTime}
        </if>
        )
  </insert>

    <delete id="deleteByIds" parameterType="map" >
      delete from sys_role where id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            ${item}
        </foreach>
    </delete>

    <delete id="delete" parameterType="int" >
        delete from sys_role where id = #{id}
    </delete>

    <update id="update" parameterType="Role">
        update sys_role set
        <if test="name != null">
            name = #{name},
        </if>
        <if test="role != null">
            role = #{role},
        </if>
        <if test="description != null">
            description = #{description},
        </if>
        <if test="show != null">
            is_show = #{show},
        </if>
        <if test="createTime != null">
            create_time = #{createTime,typeHandler=com.ace.erp.handler.mybatis.StringISODateTimeTypeHandler},
        </if>
        <if test="createTime == null">
            create_time = now(),
        </if>
        <if test="modifyTime != null">
            modify_time = #{modifyTime,typeHandler=com.ace.erp.handler.mybatis.StringISODateTimeTypeHandler},
        </if>
        <if test="modifyTime == null">
            modify_time = now()
        </if>
        where id = #{id}
    </update>


    <select id="getSysAdminRole" resultMap="roleResult">
        SELECT
        r.id,r.name,r.role,r.description,r.is_show,r.create_time,r.modify_time,
        rrp.id as rrp_id,
        rrp.role_id,
        rrp.resource_id,
        rrp.permission_ids
        FROM sys_role as r
        LEFT JOIN sys_role_resource_permission as rrp on r.id = rrp.role_id where r.role = 'sys_admin';
    </select>
</mapper>